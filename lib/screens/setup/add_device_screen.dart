import 'package:flutter/material.dart';
import 'package:hems_app/models/device.dart';
import 'package:hems_app/services/firestore_service.dart';
import 'package:provider/provider.dart';

class AddDeviceScreen extends StatefulWidget {
  const AddDeviceScreen({super.key});

  @override
  _AddDeviceScreenState createState() => _AddDeviceScreenState();
}

class _AddDeviceScreenState extends State<AddDeviceScreen> {
  final _formKey = GlobalKey<FormState>();
  final _nameController = TextEditingController();
  String _selectedType = 'Light';
  bool _isLoading = false;

  final Map<String, double> _deviceTypes = {
    'Light': 5.0,
    'Fan': 9.0,
    'Geyser': 12.0,
    'AC': 90.0,
    'Buzzer': 1.0,
  };

  @override
  Widget build(BuildContext context) {
    final firestoreService = Provider.of<FirestoreService>(context);
    const systemId = 'your-system-id'; // Replace with actual system ID

    return Scaffold(
      appBar: AppBar(title: const Text('Add New Device')),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              DropdownButtonFormField<String>(
                value: _selectedType,
                items: _deviceTypes.keys.map((type) {
                  return DropdownMenuItem(
                    value: type,
                    child: Text('$type (${_deviceTypes[type]}W)'),
                  );
                }).toList(),
                onChanged: (value) {
                  setState(() => _selectedType = value!);
                },
                decoration: const InputDecoration(
                  labelText: 'Device Type',
                  border: OutlineInputBorder(),
                ),
              ),
              const SizedBox(height: 20),
              TextFormField(
                controller: _nameController,
                decoration: const InputDecoration(
                  labelText: 'Device Name',
                  border: OutlineInputBorder(),
                ),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter device name';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 20),
              ElevatedButton(
                onPressed: _isLoading
                    ? null
                    : () async {
                        if (!_formKey.currentState!.validate()) return;

                        setState(() => _isLoading = true);

                        final device = Device(
                          id: '', // Will be generated by Firestore
                          name: '$_selectedType-${_nameController.text}',
                          power: _deviceTypes[_selectedType]!,
                          priority: 2, // Default medium priority
                          status: 'OFF',
                          systemId: systemId,
                        );

                        try {
                          await firestoreService.addDevice(device);
                          Navigator.pop(context);
                        } catch (e) {
                          ScaffoldMessenger.of(context).showSnackBar(
                            SnackBar(content: Text('Error: $e')),
                          );
                        } finally {
                          setState(() => _isLoading = false);
                        }
                      },
                child: _isLoading
                    ? const CircularProgressIndicator()
                    : const Text('Add Device'),
              ),
            ],
          ),
        ),
      ),
    );
  }

  @override
  void dispose() {
    _nameController.dispose();
    super.dispose();
  }
}
